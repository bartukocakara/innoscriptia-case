version: '3.9'

services:
  backend:
    container_name: 'backend'
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=innoscripta
      - DB_USERNAME=postgres
      - DB_PASSWORD=123456
    restart: always
    ports:
      - 8000:8000
    depends_on:
      - postgres
    networks:
      - app

  frontend:
    container_name: 'frontend'
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    command: npm start
    networks:
      - app

  postgres:
    container_name: "postgres"
    image: postgres:latest
    volumes:
      - "./docker/volumes/postgres:/var/lib/postgres"
    environment:
      - POSTGRES_DB=innoscripta
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - "5432:5432"
    networks:
      - app
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      retries: 3
      timeout: 5s

  phppgadmin:
    container_name: 'phppgadmin'
    image: 'dpage/pgadmin4'
    environment:
      PGADMIN_DEFAULT_EMAIL: 'laravel@gmail.com'
      PGADMIN_DEFAULT_PASSWORD: 'password'
    ports:
      - 8083:80
    depends_on:
      - postgres
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  postgres:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./docker/volumes/postgres
